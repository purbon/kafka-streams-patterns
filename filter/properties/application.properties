logging.level.root=INFO
logging.level.org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder=INFO
logging.level.com.purbon.kafka.streams.topologies.OltpTopicNameExtractor=INFO


management.security.enabled=false
management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=*

## Application specific configuration
message.router.topic.name.regex=${TOPIC_NAME_PATTERN}
message.router.topic.name.replacement=${TOPIC_NAME_REPLACEMENT}

## Kafka Streams
spring.kafka.streams.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.streams.application-id=kafka-streams-router-${env}
spring.kafka.streams.properties.group-id=ap-streams-group #this shows up in KafkaStreamsConfiguration
spring.kafka.streams.replication-factor=3
spring.kafka.streams.properties.num.stream.threads=3
spring.kafka.streams.properties.commit.interval.ms=100
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring.kafka.properties.sasl.kerberos.service.name=${SERVICE_NAME}
spring.kafka.properties.security.protocol=${SECURITY_PROTOCOL}

spring.kafka.properties.sasl.mechanism=GSSAPI
spring.kafka.properties.bootstrap.servers=${BOOTSTRAP_SERVERS}
#spring.kafka.properties.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/config/keytabs/kafkaops.keytab" principal="svc-tlv-kafkaops@GW-4U.COM";
spring.kafka.properties.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required useFirstPass=true useTicketCache=true ticketCache='/dev/shm/ccache' doNotPrompt=true;

# To be add later
#spring.kafka.streams.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
# Might be add if found necessary
#spring.kafka.streams.properties.compression-type=lz4
spring.kafka.streams.properties.state.dir=/tmp/kafka-streams
spring.kafka.streams.properties.state.cleanup.delay.ms=600000
spring.kafka.streams.properties.auto-offset-reset=earliest
spring.kafka.streams.properties.timestamp.extractor=org.apache.kafka.streams.processor.WallclockTimestampExtractor

# Schema Registry
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}

spring.kafka.properties.schema.registry.ssl.keystore.password=${KEYSTORE_PASSWORD}
spring.kafka.properties.schema.registry.ssl.keystore.location=/config/kafka_broker.keystore.jks
spring.kafka.properties.schema.registry.ssl.truststore.password=${TRUSTSTORE_PASSWORD}
spring.kafka.properties.schema.registry.ssl.truststore.location=/config/kafka_broker.truststore.jks
spring.kafka.properties.schema.registry.ssl.key.password=${KEYSTORE_PASSWORD}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=${SCHEMA_REGISTRY_USERNAME}:${SCHEMA_REGISTRY_PASSWORD}


spring.kafka.properties.ssl.truststore.location=/config/kafka_broker.truststore.jks
spring.kafka.properties.ssl.truststore.password=${TRUSTSTORE_PASSWORD}
spring.kafka.properties.ssl.keystore.location=/config/kafka_broker.keystore.jks
spring.kafka.properties.ssl.keystore.password=${KEYSTORE_PASSWORD}
spring.kafka.properties.ssl.key.password=${KEYSTORE_PASSWORD}
#sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true debug=true keyTab="/etc/security/keytabs/kafkaops.keytab" principal="svc-tlv-kafkaops@GW-4U.COM";